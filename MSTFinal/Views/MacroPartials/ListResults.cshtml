@using Umbraco.Web
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@inherits Umbraco.Web.Macros.PartialViewMacroPage
	@{
		int pageSize = 5;
		int page = 1;
		int.TryParse(Request.QueryString["page"], out page);
        var nodes = Umbraco.Content(1230).Children().Where("Visible").OrderBy("CreateDate desc");
		
		int totalNodes = nodes.Count();
		int totalPages = (int)Math.Ceiling((double)totalNodes / (double)pageSize);
		
		if(page > totalPages)
		{
			page = totalPages;	
		}
		else if(page < 1)
		{
			page = 1;	
		}

        var param = Request.Params["category"];
        dynamic cat = null;
        if (param != null)
        {
            cat = Umbraco.Content(int.Parse(param));
        }
	}

<ul>
    <div class="col-sm-6">
        @if (!nodes.Any())
        {
            <p>Oops, nothing seems to be here...</p>
        }
        else
        {
            foreach (var blogPage in nodes.Skip((page - 1) * pageSize).Take(pageSize))
            {
                if (param != null && blogPage.category != param)
                {
                    continue;
                }
            <h3>
                <a class="blog-url" href="@umbraco.library.NiceUrl(blogPage.Id)">@blogPage.blogPostTitle</a>
            </h3>
            <p>@blogPage.blogPostContent</p>
            <div class="bottom-article">
                <ul class="meta-post">
                    <li><i class="icon-calendar"></i><a>@umbraco.library.FormatDateTime(@blogPage.createDate.ToString(), "dd/MM/yyyy")</a></li>
                    <li><i class="icon-user"></i><a>@blogPage.creatorName</a></li>
                    @{
                        var categoryId = blogPage.Category;
                        var category = Umbraco.Content(int.Parse(categoryId));
                    }
                    <li><i class="icon-folder-open"></i><a href="/blog?category=@category.Id">@category.Name</a></li>
                </ul>
            </div>
            <br/>
                            }
                        }
        @if (totalPages > 1)
        {
            <div class="paging">
                <ul>
                    @if (page > 1)
                    {
                        <li><a href="?page=@(page-1)">Prev</a></li>
                    }
                    @for (int p = 1; p < totalPages + 1; p++)
                    {
                        var active = (p == page) ? "active" : string.Empty;
                        <li class="@active">
                            <a href="?page=@p">@p</a>
                        </li>
                    }
                    @if (page < totalPages)
                    {
                        <li><a href="?page=@(page+1)">Next</a></li>
                    }
                </ul>
            </div>
        }
    </div>
</ul>
    	